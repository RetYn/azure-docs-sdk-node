### YamlMime:TSType
name: Vaults
uid: azure-arm-keyvault.Vaults
package: azure-arm-keyvault
summary: ''
fullName: Vaults
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdate_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdate
    package: azure-arm-keyvault
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options?: {
        customHeaders?: [key: string]: string }): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: |
            Parameters to create or update the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.Vault> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters, {
      customHeaders?: [key: string]: string }, ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdate_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      VaultCreateOrUpdateParameters, { customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdateWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, parameters: VaultCreateOrUpdateParameters,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: |
            Parameters to create or update the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault" />&gt;&gt;
  - name: 'beginPurgeDeleted(string, string, ServiceCallback<void>)'
    uid: azure-arm-keyvault.Vaults.beginPurgeDeleted_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      beginPurgeDeleted(string, string, { customHeaders?: [key: string]: string
      })
    uid: azure-arm-keyvault.Vaults.beginPurgeDeleted
    package: azure-arm-keyvault
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        options?: { customHeaders?: [key: string]: string }): Promise<void>
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      beginPurgeDeleted(string, string, { customHeaders?: [key: string]: string
      }, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.beginPurgeDeleted_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string, options:
        { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      beginPurgeDeletedWithHttpOperationResponse(string, string, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.beginPurgeDeletedWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeletedWithHttpOperationResponse(vaultName: string,
        location: string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<void>>
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: azure-arm-keyvault.Vaults.checkNameAvailability_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: vaultName
          type: >-
            <xref uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.CheckNameAvailabilityResult" />&gt;
          description: ''
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.checkNameAvailability
    package: azure-arm-keyvault
    summary: Checks that the vault name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options?: { customHeaders?: [key:
        string]: string }): Promise<CheckNameAvailabilityResult>
      parameters:
        - id: vaultName
          type: >-
            <xref uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters"
            />
          description: |
            The name of the vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CheckNameAvailabilityResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CheckNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.CheckNameAvailabilityResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.CheckNameAvailabilityResult"
          />&gt;
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters, {
      customHeaders?: [key: string]: string },
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: azure-arm-keyvault.Vaults.checkNameAvailability_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options: { customHeaders?: [key:
        string]: string }, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: vaultName
          type: >-
            <xref uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters"
            />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.CheckNameAvailabilityResult" />&gt;
          description: ''
  - name: >-
      checkNameAvailabilityWithHttpOperationResponse(VaultCheckNameAvailabilityParameters,
      { customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.checkNameAvailabilityWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Checks that the vault name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailabilityWithHttpOperationResponse(vaultName:
        VaultCheckNameAvailabilityParameters, options?: { customHeaders?: [key:
        string]: string }):
        Promise<HttpOperationResponse<CheckNameAvailabilityResult>>
      parameters:
        - id: vaultName
          type: >-
            <xref uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters"
            />
          description: |
            The name of the vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.CheckNameAvailabilityResult" />&gt;&gt;
  - name: >-
      createOrUpdate(string, string, VaultCreateOrUpdateParameters,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.createOrUpdate_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: >-
      createOrUpdate(string, string, VaultCreateOrUpdateParameters, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.createOrUpdate
    package: azure-arm-keyvault
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, options?: { customHeaders?:
        [key: string]: string }): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: |
            Parameters to create or update the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.Vault> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
  - name: >-
      createOrUpdate(string, string, VaultCreateOrUpdateParameters, {
      customHeaders?: [key: string]: string }, ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.createOrUpdate_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, options: { customHeaders?:
        [key: string]: string }, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: >-
      createOrUpdateWithHttpOperationResponse(string, string,
      VaultCreateOrUpdateParameters, { customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.createOrUpdateWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, parameters: VaultCreateOrUpdateParameters,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters" />
          description: |
            Parameters to create or update the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault" />&gt;&gt;
  - name: 'deleteMethod(string, string, ServiceCallback<void>)'
    uid: azure-arm-keyvault.Vaults.deleteMethod_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: 'deleteMethod(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.deleteMethod
    package: azure-arm-keyvault
    summary: Deletes the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        options?: { customHeaders?: [key: string]: string }): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault to delete
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      deleteMethod(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.deleteMethod_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteMethodWithHttpOperationResponse(string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-keyvault.Vaults.deleteMethodWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Deletes the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, options?: { customHeaders?: [key: string]:
        string }): Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault to delete
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'get(string, string, ServiceCallback<Vault>)'
    uid: azure-arm-keyvault.Vaults.get_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: 'get(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.get
    package: azure-arm-keyvault
    summary: Gets the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options?: {
        customHeaders?: [key: string]: string }): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.Vault> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
  - name: >-
      get(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.get_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: 'getDeleted(string, string, ServiceCallback<DeletedVault>)'
    uid: azure-arm-keyvault.Vaults.getDeleted_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, callback:
        ServiceCallback<DeletedVault>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.DeletedVault"
            />&gt;
          description: ''
  - name: 'getDeleted(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.getDeleted
    package: azure-arm-keyvault
    summary: Gets the deleted Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options?: {
        customHeaders?: [key: string]: string }): Promise<DeletedVault>
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: location
          type: string
          description: |
            The location of the deleted vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedVault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedVault} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.DeletedVault> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.DeletedVault" />&gt;
  - name: >-
      getDeleted(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<DeletedVault>)
    uid: azure-arm-keyvault.Vaults.getDeleted_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<DeletedVault>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.DeletedVault"
            />&gt;
          description: ''
  - name: >-
      getDeletedWithHttpOperationResponse(string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-keyvault.Vaults.getDeletedWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Gets the deleted Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedWithHttpOperationResponse(vaultName: string,
        location: string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<DeletedVault>>
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: location
          type: string
          description: |
            The location of the deleted vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.DeletedVault" />&gt;&gt;
  - name: >-
      getWithHttpOperationResponse(string, string, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-keyvault.Vaults.getWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Gets the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        vaultName: string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault" />&gt;&gt;
  - name: list(ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.list_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.ResourceListResult"
            />&gt;
          description: ''
  - name: 'list({ customHeaders?: [key: string]: string, top?: number })'
    uid: azure-arm-keyvault.Vaults.list
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: { customHeaders?: [key: string]: string, top?:
        number }): Promise<ResourceListResult>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.ResourceListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.ResourceListResult" />&gt;
  - name: >-
      list({ customHeaders?: [key: string]: string, top?: number },
      ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.list_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: { customHeaders?: [key: string]: string, top?:
        number }, callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.ResourceListResult"
            />&gt;
          description: ''
  - name: 'listByResourceGroup(string, ServiceCallback<VaultListResult>)'
    uid: azure-arm-keyvault.Vaults.listByResourceGroup_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: >-
      listByResourceGroup(string, { customHeaders?: [key: string]: string, top?:
      number })
    uid: azure-arm-keyvault.Vaults.listByResourceGroup
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?: {
        customHeaders?: [key: string]: string, top?: number }):
        Promise<VaultListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.VaultListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult" />&gt;
  - name: >-
      listByResourceGroup(string, { customHeaders?: [key: string]: string, top?:
      number }, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listByResourceGroup_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: {
        customHeaders?: [key: string]: string, top?: number }, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: 'listByResourceGroupNext(string, ServiceCallback<VaultListResult>)'
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNext_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: 'listByResourceGroupNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNext
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }): Promise<VaultListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.VaultListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult" />&gt;
  - name: >-
      listByResourceGroupNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNext_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: >-
      listByResourceGroupNextWithHttpOperationResponse(string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNextWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<VaultListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult" />&gt;&gt;
  - name: >-
      listByResourceGroupWithHttpOperationResponse(string, { customHeaders?:
      [key: string]: string, top?: number })
    uid: azure-arm-keyvault.Vaults.listByResourceGroupWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: { customHeaders?: [key: string]: string, top?: number
        }): Promise<HttpOperationResponse<VaultListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult" />&gt;&gt;
  - name: listBySubscription(ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscription_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(callback: ServiceCallback<VaultListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: >-
      listBySubscription({ customHeaders?: [key: string]: string, top?: number
      })
    uid: azure-arm-keyvault.Vaults.listBySubscription
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?: { customHeaders?: [key: string]:
        string, top?: number }): Promise<VaultListResult>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.VaultListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult" />&gt;
  - name: >-
      listBySubscription({ customHeaders?: [key: string]: string, top?: number
      }, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscription_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: { customHeaders?: [key: string]:
        string, top?: number }, callback: ServiceCallback<VaultListResult>)
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: 'listBySubscriptionNext(string, ServiceCallback<VaultListResult>)'
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNext_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: 'listBySubscriptionNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNext
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }): Promise<VaultListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.VaultListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult" />&gt;
  - name: >-
      listBySubscriptionNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNext_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.VaultListResult"
            />&gt;
          description: ''
  - name: >-
      listBySubscriptionNextWithHttpOperationResponse(string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNextWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNextWithHttpOperationResponse(nextPageLink:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<VaultListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult" />&gt;&gt;
  - name: >-
      listBySubscriptionWithHttpOperationResponse({ customHeaders?: [key:
      string]: string, top?: number })
    uid: azure-arm-keyvault.Vaults.listBySubscriptionWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionWithHttpOperationResponse(options?: {
        customHeaders?: [key: string]: string, top?: number }):
        Promise<HttpOperationResponse<VaultListResult>>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult" />&gt;&gt;
  - name: listDeleted(ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeleted_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listDeleted(callback: ServiceCallback<DeletedVaultListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult" />&gt;
          description: ''
  - name: 'listDeleted({ customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.listDeleted
    package: azure-arm-keyvault
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeleted(options?: { customHeaders?: [key: string]: string
        }): Promise<DeletedVaultListResult>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedVaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedVaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.DeletedVaultListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.DeletedVaultListResult"
          />&gt;
  - name: >-
      listDeleted({ customHeaders?: [key: string]: string },
      ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeleted_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeleted(options: { customHeaders?: [key: string]: string },
        callback: ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult" />&gt;
          description: ''
  - name: 'listDeletedNext(string, ServiceCallback<DeletedVaultListResult>)'
    uid: azure-arm-keyvault.Vaults.listDeletedNext_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, callback:
        ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult" />&gt;
          description: ''
  - name: 'listDeletedNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.listDeletedNext
    package: azure-arm-keyvault
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<DeletedVaultListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedVaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedVaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.DeletedVaultListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.DeletedVaultListResult"
          />&gt;
  - name: >-
      listDeletedNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeletedNext_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult" />&gt;
          description: ''
  - name: >-
      listDeletedNextWithHttpOperationResponse(string, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-keyvault.Vaults.listDeletedNextWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNextWithHttpOperationResponse(nextPageLink: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<DeletedVaultListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.DeletedVaultListResult" />&gt;&gt;
  - name: >-
      listDeletedWithHttpOperationResponse({ customHeaders?: [key: string]:
      string })
    uid: azure-arm-keyvault.Vaults.listDeletedWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedWithHttpOperationResponse(options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<DeletedVaultListResult>>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.DeletedVaultListResult" />&gt;&gt;
  - name: 'listNext(string, ServiceCallback<ResourceListResult>)'
    uid: azure-arm-keyvault.Vaults.listNext_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.ResourceListResult"
            />&gt;
          description: ''
  - name: 'listNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.listNext
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?: { customHeaders?:
        [key: string]: string }): Promise<ResourceListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.ResourceListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.ResourceListResult" />&gt;
  - name: >-
      listNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.listNext_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: { customHeaders?: [key:
        string]: string }, callback: ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.ResourceListResult"
            />&gt;
          description: ''
  - name: >-
      listNextWithHttpOperationResponse(string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-keyvault.Vaults.listNextWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<ResourceListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.ResourceListResult" />&gt;&gt;
  - name: >-
      listWithHttpOperationResponse({ customHeaders?: [key: string]: string,
      top?: number })
    uid: azure-arm-keyvault.Vaults.listWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWithHttpOperationResponse(options?: { customHeaders?: [key:
        string]: string, top?: number }):
        Promise<HttpOperationResponse<ResourceListResult>>
      parameters:
        - id: options
          type: '{ customHeaders?: [key: string]: string, top?: number }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.ResourceListResult" />&gt;&gt;
  - name: 'purgeDeleted(string, string, ServiceCallback<void>)'
    uid: azure-arm-keyvault.Vaults.purgeDeleted_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: 'purgeDeleted(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-keyvault.Vaults.purgeDeleted
    package: azure-arm-keyvault
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, options?: {
        customHeaders?: [key: string]: string }): Promise<void>
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      purgeDeleted(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.purgeDeleted_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      purgeDeletedWithHttpOperationResponse(string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-keyvault.Vaults.purgeDeletedWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedWithHttpOperationResponse(vaultName: string,
        location: string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<void>>
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'update(string, string, VaultPatchParameters, ServiceCallback<Vault>)'
    uid: azure-arm-keyvault.Vaults.update_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: >-
      update(string, string, VaultPatchParameters, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-keyvault.Vaults.update
    package: azure-arm-keyvault
    summary: Update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options?: { customHeaders?: [key:
        string]: string }): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters" />
          description: |
            Parameters to patch the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.Vault> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
  - name: >-
      update(string, string, VaultPatchParameters, { customHeaders?: [key:
      string]: string }, ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.update_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options: { customHeaders?: [key:
        string]: string }, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault" />&gt;
          description: ''
  - name: >-
      updateAccessPolicy(string, string, string, VaultAccessPolicyParameters,
      ServiceCallback<VaultAccessPolicyParameters>)
    uid: azure-arm-keyvault.Vaults.updateAccessPolicy_1
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: string, parameters: VaultAccessPolicyParameters,
        callback: ServiceCallback<VaultAccessPolicyParameters>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: operationKind
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultAccessPolicyParameters" />&gt;
          description: ''
  - name: >-
      updateAccessPolicy(string, string, string, VaultAccessPolicyParameters, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.updateAccessPolicy
    package: azure-arm-keyvault
    summary: Update access policies in a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: string, parameters: VaultAccessPolicyParameters,
        options?: { customHeaders?: [key: string]: string }):
        Promise<VaultAccessPolicyParameters>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: operationKind
          type: string
          description: |
            Name of the operation. Possible values
            include: 'add', 'replace', 'remove'
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters" />
          description: |
            Access policy to merge into the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultAccessPolicyParameters} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultAccessPolicyParameters} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-keyvault.VaultAccessPolicyParameters> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.VaultAccessPolicyParameters"
          />&gt;
  - name: >-
      updateAccessPolicy(string, string, string, VaultAccessPolicyParameters, {
      customHeaders?: [key: string]: string },
      ServiceCallback<VaultAccessPolicyParameters>)
    uid: azure-arm-keyvault.Vaults.updateAccessPolicy_2
    package: azure-arm-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: string, parameters: VaultAccessPolicyParameters,
        options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<VaultAccessPolicyParameters>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: operationKind
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultAccessPolicyParameters" />&gt;
          description: ''
  - name: >-
      updateAccessPolicyWithHttpOperationResponse(string, string, string,
      VaultAccessPolicyParameters, { customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.updateAccessPolicyWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Update access policies in a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicyWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, operationKind: string, parameters:
        VaultAccessPolicyParameters, options?: { customHeaders?: [key: string]:
        string }): Promise<HttpOperationResponse<VaultAccessPolicyParameters>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: operationKind
          type: string
          description: |
            Name of the operation. Possible values
            include: 'add', 'replace', 'remove'
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters" />
          description: |
            Access policy to merge into the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultAccessPolicyParameters" />&gt;&gt;
  - name: >-
      updateWithHttpOperationResponse(string, string, VaultPatchParameters, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-keyvault.Vaults.updateWithHttpOperationResponse
    package: azure-arm-keyvault
    summary: Update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        vaultName: string, parameters: VaultPatchParameters, options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters" />
          description: |
            Parameters to patch the vault
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault" />&gt;&gt;
