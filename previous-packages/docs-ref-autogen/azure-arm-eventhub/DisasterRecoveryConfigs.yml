### YamlMime:TSType
name: DisasterRecoveryConfigs
uid: azure-arm-eventhub.DisasterRecoveryConfigs
package: azure-arm-eventhub
summary: ''
fullName: DisasterRecoveryConfigs
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'breakPairing(string, string, string, ServiceCallback<void>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.breakPairing_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function breakPairing(resourceGroupName: string, namespaceName: string,
        alias: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      breakPairing(string, string, string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.breakPairing
    package: azure-arm-eventhub
    summary: >-
      This operation disables the Disaster Recovery and stops replicating
      changes

      from primary to secondary namespaces
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function breakPairing(resourceGroupName: string, namespaceName: string,
        alias: string, options?: { customHeaders?: [key: string]: string }):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      breakPairing(string, string, string, { customHeaders?: [key: string]:
      string }, ServiceCallback<void>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.breakPairing_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function breakPairing(resourceGroupName: string, namespaceName: string,
        alias: string, options: { customHeaders?: [key: string]: string },
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      breakPairingWithHttpOperationResponse(string, string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.breakPairingWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: >-
      This operation disables the Disaster Recovery and stops replicating
      changes

      from primary to secondary namespaces
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function breakPairingWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, alias: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: >-
      checkNameAvailability(string, string, CheckNameAvailabilityParameter,
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.checkNameAvailability_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(resourceGroupName: string, namespaceName:
        string, parameters: CheckNameAvailabilityParameter, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.CheckNameAvailabilityParameter" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.CheckNameAvailabilityResult" />&gt;
          description: ''
  - name: >-
      checkNameAvailability(string, string, CheckNameAvailabilityParameter, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.checkNameAvailability
    package: azure-arm-eventhub
    summary: Check the give Namespace name availability.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(resourceGroupName: string, namespaceName:
        string, parameters: CheckNameAvailabilityParameter, options?: {
        customHeaders?: [key: string]: string }):
        Promise<CheckNameAvailabilityResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: parameters
          type: <xref uid="azure-arm-eventhub.CheckNameAvailabilityParameter" />
          description: |
            Parameters to check availability of the given
            Alias name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CheckNameAvailabilityResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CheckNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.CheckNameAvailabilityResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-eventhub.CheckNameAvailabilityResult"
          />&gt;
  - name: >-
      checkNameAvailability(string, string, CheckNameAvailabilityParameter, {
      customHeaders?: [key: string]: string },
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.checkNameAvailability_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(resourceGroupName: string, namespaceName:
        string, parameters: CheckNameAvailabilityParameter, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.CheckNameAvailabilityParameter" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.CheckNameAvailabilityResult" />&gt;
          description: ''
  - name: >-
      checkNameAvailabilityWithHttpOperationResponse(string, string,
      CheckNameAvailabilityParameter, { customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.checkNameAvailabilityWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Check the give Namespace name availability.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        checkNameAvailabilityWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, parameters:
        CheckNameAvailabilityParameter, options?: { customHeaders?: [key:
        string]: string }):
        Promise<HttpOperationResponse<CheckNameAvailabilityResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: parameters
          type: <xref uid="azure-arm-eventhub.CheckNameAvailabilityParameter" />
          description: |
            Parameters to check availability of the given
            Alias name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.CheckNameAvailabilityResult" />&gt;&gt;
  - name: >-
      createOrUpdate(string, string, string, ArmDisasterRecovery,
      ServiceCallback<ArmDisasterRecovery>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.createOrUpdate_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, alias: string, parameters: ArmDisasterRecovery, callback:
        ServiceCallback<ArmDisasterRecovery>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.ArmDisasterRecovery" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;
          description: ''
  - name: >-
      createOrUpdate(string, string, string, ArmDisasterRecovery, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.createOrUpdate
    package: azure-arm-eventhub
    summary: Creates or updates a new Alias(Disaster Recovery configuration)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, alias: string, parameters: ArmDisasterRecovery, options?: {
        customHeaders?: [key: string]: string }): Promise<ArmDisasterRecovery>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: parameters
          type: <xref uid="azure-arm-eventhub.ArmDisasterRecovery" />
          description: |
            Parameters required to create an Alias(Disaster
            Recovery configuration)
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ArmDisasterRecovery} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ArmDisasterRecovery} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.ArmDisasterRecovery> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;
  - name: >-
      createOrUpdate(string, string, string, ArmDisasterRecovery, {
      customHeaders?: [key: string]: string },
      ServiceCallback<ArmDisasterRecovery>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.createOrUpdate_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, alias: string, parameters: ArmDisasterRecovery, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<ArmDisasterRecovery>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.ArmDisasterRecovery" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;
          description: ''
  - name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string,
      ArmDisasterRecovery, { customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.createOrUpdateWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Creates or updates a new Alias(Disaster Recovery configuration)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, alias: string, parameters:
        ArmDisasterRecovery, options?: { customHeaders?: [key: string]: string
        }): Promise<HttpOperationResponse<ArmDisasterRecovery>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: parameters
          type: <xref uid="azure-arm-eventhub.ArmDisasterRecovery" />
          description: |
            Parameters required to create an Alias(Disaster
            Recovery configuration)
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;&gt;
  - name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.deleteMethod_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        alias: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteMethod(string, string, string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.deleteMethod
    package: azure-arm-eventhub
    summary: Deletes an Alias(Disaster Recovery configuration)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        alias: string, options?: { customHeaders?: [key: string]: string }):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      deleteMethod(string, string, string, { customHeaders?: [key: string]:
      string }, ServiceCallback<void>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.deleteMethod_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        alias: string, options: { customHeaders?: [key: string]: string },
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteMethodWithHttpOperationResponse(string, string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.deleteMethodWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Deletes an Alias(Disaster Recovery configuration)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, alias: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'failOver(string, string, string, ServiceCallback<void>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.failOver_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function failOver(resourceGroupName: string, namespaceName: string,
        alias: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      failOver(string, string, string, { customHeaders?: [key: string]: string
      })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.failOver
    package: azure-arm-eventhub
    summary: >-
      Invokes GEO DR failover and reconfigure the alias to point to the
      secondary

      namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function failOver(resourceGroupName: string, namespaceName: string,
        alias: string, options?: { customHeaders?: [key: string]: string }):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      failOver(string, string, string, { customHeaders?: [key: string]: string
      }, ServiceCallback<void>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.failOver_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function failOver(resourceGroupName: string, namespaceName: string,
        alias: string, options: { customHeaders?: [key: string]: string },
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      failOverWithHttpOperationResponse(string, string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.failOverWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: >-
      Invokes GEO DR failover and reconfigure the alias to point to the
      secondary

      namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function failOverWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, alias: string, options?: { customHeaders?: [key:
        string]: string }): Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'get(string, string, string, ServiceCallback<ArmDisasterRecovery>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.get_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, alias:
        string, callback: ServiceCallback<ArmDisasterRecovery>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;
          description: ''
  - name: 'get(string, string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.get
    package: azure-arm-eventhub
    summary: |-
      Retrieves Alias(Disaster Recovery configuration) for primary or secondary
      namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, alias:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<ArmDisasterRecovery>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ArmDisasterRecovery} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ArmDisasterRecovery} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.ArmDisasterRecovery> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;
  - name: >-
      get(string, string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<ArmDisasterRecovery>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.get_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, alias:
        string, options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<ArmDisasterRecovery>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;
          description: ''
  - name: >-
      getAuthorizationRule(string, string, string, string,
      ServiceCallback<AuthorizationRule>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.getAuthorizationRule_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, alias: string, authorizationRuleName: string, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.AuthorizationRule"
            />&gt;
          description: ''
  - name: >-
      getAuthorizationRule(string, string, string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.getAuthorizationRule
    package: azure-arm-eventhub
    summary: Gets an AuthorizationRule for a Namespace by rule name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, alias: string, authorizationRuleName: string, options?: {
        customHeaders?: [key: string]: string }): Promise<AuthorizationRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRule} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRule> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRule" />&gt;
  - name: >-
      getAuthorizationRule(string, string, string, string, { customHeaders?:
      [key: string]: string }, ServiceCallback<AuthorizationRule>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.getAuthorizationRule_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, alias: string, authorizationRuleName: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.AuthorizationRule"
            />&gt;
          description: ''
  - name: >-
      getAuthorizationRuleWithHttpOperationResponse(string, string, string,
      string, { customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.getAuthorizationRuleWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets an AuthorizationRule for a Namespace by rule name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getAuthorizationRuleWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, alias: string, authorizationRuleName: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRule>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRule" />&gt;&gt;
  - name: >-
      getWithHttpOperationResponse(string, string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.getWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: |-
      Retrieves Alias(Disaster Recovery configuration) for primary or secondary
      namespace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, alias: string, options?: { customHeaders?: [key:
        string]: string }): Promise<HttpOperationResponse<ArmDisasterRecovery>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.ArmDisasterRecovery" />&gt;&gt;
  - name: 'list(string, string, ServiceCallback<ArmDisasterRecoveryListResult>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.list_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, namespaceName: string,
        callback: ServiceCallback<ArmDisasterRecoveryListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;
          description: ''
  - name: 'list(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.list
    package: azure-arm-eventhub
    summary: Gets all Alias(Disaster Recovery configurations)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, namespaceName: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<ArmDisasterRecoveryListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ArmDisasterRecoveryListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ArmDisasterRecoveryListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.ArmDisasterRecoveryListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref
          uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;
  - name: >-
      list(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<ArmDisasterRecoveryListResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.list_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, namespaceName: string, options:
        { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<ArmDisasterRecoveryListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRules(string, string, string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRules_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, alias: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRules(string, string, string, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRules
    package: azure-arm-eventhub
    summary: Gets a list of authorization rules for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, alias: string, options?: { customHeaders?: [key:
        string]: string }): Promise<AuthorizationRuleListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRuleListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRuleListResult"
          />&gt;
  - name: >-
      listAuthorizationRules(string, string, string, { customHeaders?: [key:
      string]: string }, ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRules_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, alias: string, options: { customHeaders?: [key:
        string]: string }, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRulesNext_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRulesNext(string, { customHeaders?: [key: string]: string
      })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRulesNext
    package: azure-arm-eventhub
    summary: Gets a list of authorization rules for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<AuthorizationRuleListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRuleListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRuleListResult"
          />&gt;
  - name: >-
      listAuthorizationRulesNext(string, { customHeaders?: [key: string]: string
      }, ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRulesNext_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRulesNextWithHttpOperationResponse(string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRulesNextWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets a list of authorization rules for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRuleListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;&gt;
  - name: >-
      listAuthorizationRulesWithHttpOperationResponse(string, string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.listAuthorizationRulesWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets a list of authorization rules for a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        listAuthorizationRulesWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, alias: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRuleListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;&gt;
  - name: 'listKeys(string, string, string, string, ServiceCallback<AccessKeys>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listKeys_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        alias: string, authorizationRuleName: string, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
          description: ''
  - name: >-
      listKeys(string, string, string, string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listKeys
    package: azure-arm-eventhub
    summary: Gets the primary and secondary connection strings for the Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        alias: string, authorizationRuleName: string, options?: {
        customHeaders?: [key: string]: string }): Promise<AccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessKeys} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessKeys} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AccessKeys> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
  - name: >-
      listKeys(string, string, string, string, { customHeaders?: [key: string]:
      string }, ServiceCallback<AccessKeys>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listKeys_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        alias: string, authorizationRuleName: string, options: { customHeaders?:
        [key: string]: string }, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: alias
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
          description: ''
  - name: >-
      listKeysWithHttpOperationResponse(string, string, string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.listKeysWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets the primary and secondary connection strings for the Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeysWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, alias: string, authorizationRuleName: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AccessKeys>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: alias
          type: string
          description: |
            The Disaster Recovery configuration name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AccessKeys" />&gt;&gt;
  - name: 'listNext(string, ServiceCallback<ArmDisasterRecoveryListResult>)'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listNext_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ArmDisasterRecoveryListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;
          description: ''
  - name: 'listNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listNext
    package: azure-arm-eventhub
    summary: Gets all Alias(Disaster Recovery configurations)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?: { customHeaders?:
        [key: string]: string }): Promise<ArmDisasterRecoveryListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ArmDisasterRecoveryListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ArmDisasterRecoveryListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.ArmDisasterRecoveryListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref
          uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;
  - name: >-
      listNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<ArmDisasterRecoveryListResult>)
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listNext_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: { customHeaders?: [key:
        string]: string }, callback:
        ServiceCallback<ArmDisasterRecoveryListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;
          description: ''
  - name: >-
      listNextWithHttpOperationResponse(string, { customHeaders?: [key: string]:
      string })
    uid: >-
      azure-arm-eventhub.DisasterRecoveryConfigs.listNextWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets all Alias(Disaster Recovery configurations)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<ArmDisasterRecoveryListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;&gt;
  - name: >-
      listWithHttpOperationResponse(string, string, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-eventhub.DisasterRecoveryConfigs.listWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets all Alias(Disaster Recovery configurations)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, options?: { customHeaders?: [key: string]: string
        }): Promise<HttpOperationResponse<ArmDisasterRecoveryListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.ArmDisasterRecoveryListResult" />&gt;&gt;
