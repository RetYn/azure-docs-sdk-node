### YamlMime:TSType
name: EventHubs
uid: azure-arm-eventhub.EventHubs
package: azure-arm-eventhub
summary: ''
fullName: EventHubs
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, Eventhub,
      ServiceCallback<Eventhub>)
    uid: azure-arm-eventhub.EventHubs.createOrUpdate_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, callback:
        ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.Eventhub" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.Eventhub" />&gt;
          description: ''
  - name: >-
      createOrUpdate(string, string, string, Eventhub, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-eventhub.EventHubs.createOrUpdate
    package: azure-arm-eventhub
    summary: >-
      Creates or updates a new Event Hub as a nested resource within a
      Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, options?: {
        customHeaders?: [key: string]: string }): Promise<Eventhub>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: parameters
          type: <xref uid="azure-arm-eventhub.Eventhub" />
          description: |
            Parameters supplied to create an Event Hub
            resource.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Eventhub} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Eventhub} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.Eventhub> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.Eventhub" />&gt;
  - name: >-
      createOrUpdate(string, string, string, Eventhub, { customHeaders?: [key:
      string]: string }, ServiceCallback<Eventhub>)
    uid: azure-arm-eventhub.EventHubs.createOrUpdate_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, eventHubName: string, parameters: Eventhub, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.Eventhub" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.Eventhub" />&gt;
          description: ''
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, ServiceCallback<AuthorizationRule>)
    uid: azure-arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.AuthorizationRule" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.AuthorizationRule"
            />&gt;
          description: ''
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, { customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.createOrUpdateAuthorizationRule
    package: azure-arm-eventhub
    summary: Creates or updates an AuthorizationRule for the specified Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, options?: { customHeaders?: [key:
        string]: string }): Promise<AuthorizationRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: parameters
          type: <xref uid="azure-arm-eventhub.AuthorizationRule" />
          description: |
            The shared access AuthorizationRule.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRule} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRule> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRule" />&gt;
  - name: >-
      createOrUpdateAuthorizationRule(string, string, string, string,
      AuthorizationRule, { customHeaders?: [key: string]: string },
      ServiceCallback<AuthorizationRule>)
    uid: azure-arm-eventhub.EventHubs.createOrUpdateAuthorizationRule_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, parameters: AuthorizationRule, options: { customHeaders?: [key:
        string]: string }, callback: ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.AuthorizationRule" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.AuthorizationRule"
            />&gt;
          description: ''
  - name: >-
      createOrUpdateAuthorizationRuleWithHttpOperationResponse(string, string,
      string, string, AuthorizationRule, { customHeaders?: [key: string]: string
      })
    uid: >-
      azure-arm-eventhub.EventHubs.createOrUpdateAuthorizationRuleWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Creates or updates an AuthorizationRule for the specified Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        createOrUpdateAuthorizationRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, eventHubName: string,
        authorizationRuleName: string, parameters: AuthorizationRule, options?:
        { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRule>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: parameters
          type: <xref uid="azure-arm-eventhub.AuthorizationRule" />
          description: |
            The shared access AuthorizationRule.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRule" />&gt;&gt;
  - name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string, Eventhub,
      { customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.createOrUpdateWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: >-
      Creates or updates a new Event Hub as a nested resource within a
      Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, eventHubName: string, parameters:
        Eventhub, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Eventhub>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: parameters
          type: <xref uid="azure-arm-eventhub.Eventhub" />
          description: |
            Parameters supplied to create an Event Hub
            resource.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.Eventhub" />&gt;&gt;
  - name: >-
      deleteAuthorizationRule(string, string, string, string,
      ServiceCallback<void>)
    uid: azure-arm-eventhub.EventHubs.deleteAuthorizationRule_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteAuthorizationRule(string, string, string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.deleteAuthorizationRule
    package: azure-arm-eventhub
    summary: Deletes an Event Hub AuthorizationRule.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      deleteAuthorizationRule(string, string, string, string, { customHeaders?:
      [key: string]: string }, ServiceCallback<void>)
    uid: azure-arm-eventhub.EventHubs.deleteAuthorizationRule_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAuthorizationRule(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteAuthorizationRuleWithHttpOperationResponse(string, string, string,
      string, { customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.EventHubs.deleteAuthorizationRuleWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Deletes an Event Hub AuthorizationRule.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        deleteAuthorizationRuleWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, eventHubName: string,
        authorizationRuleName: string, options?: { customHeaders?: [key:
        string]: string }): Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    uid: azure-arm-eventhub.EventHubs.deleteMethod_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteMethod(string, string, string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-eventhub.EventHubs.deleteMethod
    package: azure-arm-eventhub
    summary: Deletes an Event Hub from the specified Namespace and resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options?: { customHeaders?: [key: string]: string
        }): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      deleteMethod(string, string, string, { customHeaders?: [key: string]:
      string }, ServiceCallback<void>)
    uid: azure-arm-eventhub.EventHubs.deleteMethod_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options: { customHeaders?: [key: string]: string
        }, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteMethodWithHttpOperationResponse(string, string, string, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.deleteMethodWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Deletes an Event Hub from the specified Namespace and resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, eventHubName: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'get(string, string, string, ServiceCallback<Eventhub>)'
    uid: azure-arm-eventhub.EventHubs.get_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, callback: ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.Eventhub" />&gt;
          description: ''
  - name: 'get(string, string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-eventhub.EventHubs.get
    package: azure-arm-eventhub
    summary: Gets an Event Hubs description for the specified Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options?: { customHeaders?: [key: string]: string
        }): Promise<Eventhub>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Eventhub} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Eventhub} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.Eventhub> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.Eventhub" />&gt;
  - name: >-
      get(string, string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<Eventhub>)
    uid: azure-arm-eventhub.EventHubs.get_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        eventHubName: string, options: { customHeaders?: [key: string]: string
        }, callback: ServiceCallback<Eventhub>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.Eventhub" />&gt;
          description: ''
  - name: >-
      getAuthorizationRule(string, string, string, string,
      ServiceCallback<AuthorizationRule>)
    uid: azure-arm-eventhub.EventHubs.getAuthorizationRule_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.AuthorizationRule"
            />&gt;
          description: ''
  - name: >-
      getAuthorizationRule(string, string, string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.getAuthorizationRule
    package: azure-arm-eventhub
    summary: Gets an AuthorizationRule for an Event Hub by rule name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, options?: {
        customHeaders?: [key: string]: string }): Promise<AuthorizationRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRule} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRule> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRule" />&gt;
  - name: >-
      getAuthorizationRule(string, string, string, string, { customHeaders?:
      [key: string]: string }, ServiceCallback<AuthorizationRule>)
    uid: azure-arm-eventhub.EventHubs.getAuthorizationRule_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorizationRule(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<AuthorizationRule>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.AuthorizationRule"
            />&gt;
          description: ''
  - name: >-
      getAuthorizationRuleWithHttpOperationResponse(string, string, string,
      string, { customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.getAuthorizationRuleWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets an AuthorizationRule for an Event Hub by rule name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getAuthorizationRuleWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRule>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRule" />&gt;&gt;
  - name: >-
      getWithHttpOperationResponse(string, string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.getWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets an Event Hubs description for the specified Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options?: { customHeaders?:
        [key: string]: string }): Promise<HttpOperationResponse<Eventhub>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.Eventhub" />&gt;&gt;
  - name: >-
      listAuthorizationRules(string, string, string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.EventHubs.listAuthorizationRules_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRules(string, string, string, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-eventhub.EventHubs.listAuthorizationRules
    package: azure-arm-eventhub
    summary: Gets the authorization rules for an Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options?: { customHeaders?:
        [key: string]: string }): Promise<AuthorizationRuleListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRuleListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRuleListResult"
          />&gt;
  - name: >-
      listAuthorizationRules(string, string, string, { customHeaders?: [key:
      string]: string }, ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.EventHubs.listAuthorizationRules_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRules(resourceGroupName: string,
        namespaceName: string, eventHubName: string, options: { customHeaders?:
        [key: string]: string }, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRulesNext(string,
      ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.EventHubs.listAuthorizationRulesNext_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRulesNext(string, { customHeaders?: [key: string]: string
      })
    uid: azure-arm-eventhub.EventHubs.listAuthorizationRulesNext
    package: azure-arm-eventhub
    summary: Gets the authorization rules for an Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<AuthorizationRuleListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AuthorizationRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AuthorizationRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AuthorizationRuleListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-eventhub.AuthorizationRuleListResult"
          />&gt;
  - name: >-
      listAuthorizationRulesNext(string, { customHeaders?: [key: string]: string
      }, ServiceCallback<AuthorizationRuleListResult>)
    uid: azure-arm-eventhub.EventHubs.listAuthorizationRulesNext_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAuthorizationRulesNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<AuthorizationRuleListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;
          description: ''
  - name: >-
      listAuthorizationRulesNextWithHttpOperationResponse(string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.EventHubs.listAuthorizationRulesNextWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets the authorization rules for an Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        listAuthorizationRulesNextWithHttpOperationResponse(nextPageLink:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRuleListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;&gt;
  - name: >-
      listAuthorizationRulesWithHttpOperationResponse(string, string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-eventhub.EventHubs.listAuthorizationRulesWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets the authorization rules for an Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        listAuthorizationRulesWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, eventHubName: string, options?: {
        customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AuthorizationRuleListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AuthorizationRuleListResult" />&gt;&gt;
  - name: 'listByNamespace(string, string, ServiceCallback<EventHubListResult>)'
    uid: azure-arm-eventhub.EventHubs.listByNamespace_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, callback: ServiceCallback<EventHubListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.EventHubListResult"
            />&gt;
          description: ''
  - name: >-
      listByNamespace(string, string, { customHeaders?: [key: string]: string,
      skip?: number, top?: number })
    uid: azure-arm-eventhub.EventHubs.listByNamespace
    package: azure-arm-eventhub
    summary: Gets all the Event Hubs in a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: { customHeaders?: [key: string]: string, skip?:
        number, top?: number }): Promise<EventHubListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, skip?: number, top?: number
            }
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EventHubListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EventHubListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.EventHubListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.EventHubListResult" />&gt;
  - name: >-
      listByNamespace(string, string, { customHeaders?: [key: string]: string,
      skip?: number, top?: number }, ServiceCallback<EventHubListResult>)
    uid: azure-arm-eventhub.EventHubs.listByNamespace_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options: { customHeaders?: [key: string]: string, skip?: number,
        top?: number }, callback: ServiceCallback<EventHubListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, skip?: number, top?: number
            }
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.EventHubListResult"
            />&gt;
          description: ''
  - name: 'listByNamespaceNext(string, ServiceCallback<EventHubListResult>)'
    uid: azure-arm-eventhub.EventHubs.listByNamespaceNext_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.EventHubListResult"
            />&gt;
          description: ''
  - name: 'listByNamespaceNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-eventhub.EventHubs.listByNamespaceNext
    package: azure-arm-eventhub
    summary: Gets all the Event Hubs in a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }): Promise<EventHubListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EventHubListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EventHubListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.EventHubListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.EventHubListResult" />&gt;
  - name: >-
      listByNamespaceNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<EventHubListResult>)
    uid: azure-arm-eventhub.EventHubs.listByNamespaceNext_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<EventHubListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-eventhub.EventHubListResult"
            />&gt;
          description: ''
  - name: >-
      listByNamespaceNextWithHttpOperationResponse(string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.listByNamespaceNextWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets all the Event Hubs in a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceNextWithHttpOperationResponse(nextPageLink:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<EventHubListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.EventHubListResult" />&gt;&gt;
  - name: >-
      listByNamespaceWithHttpOperationResponse(string, string, { customHeaders?:
      [key: string]: string, skip?: number, top?: number })
    uid: azure-arm-eventhub.EventHubs.listByNamespaceWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets all the Event Hubs in a Namespace.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespaceWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, options?: { customHeaders?: [key:
        string]: string, skip?: number, top?: number }):
        Promise<HttpOperationResponse<EventHubListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, skip?: number, top?: number
            }
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.EventHubListResult" />&gt;&gt;
  - name: 'listKeys(string, string, string, string, ServiceCallback<AccessKeys>)'
    uid: azure-arm-eventhub.EventHubs.listKeys_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
          description: ''
  - name: >-
      listKeys(string, string, string, string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-eventhub.EventHubs.listKeys
    package: azure-arm-eventhub
    summary: Gets the ACS and SAS connection strings for the Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, options?: {
        customHeaders?: [key: string]: string }): Promise<AccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessKeys} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessKeys} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AccessKeys> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
  - name: >-
      listKeys(string, string, string, string, { customHeaders?: [key: string]:
      string }, ServiceCallback<AccessKeys>)
    uid: azure-arm-eventhub.EventHubs.listKeys_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, namespaceName: string,
        eventHubName: string, authorizationRuleName: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
          description: ''
  - name: >-
      listKeysWithHttpOperationResponse(string, string, string, string, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.listKeysWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Gets the ACS and SAS connection strings for the Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listKeysWithHttpOperationResponse(resourceGroupName: string,
        namespaceName: string, eventHubName: string, authorizationRuleName:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<AccessKeys>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AccessKeys" />&gt;&gt;
  - name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, ServiceCallback<AccessKeys>)
    uid: azure-arm-eventhub.EventHubs.regenerateKeys_1
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.RegenerateAccessKeyParameters" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
          description: ''
  - name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, { customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.regenerateKeys
    package: azure-arm-eventhub
    summary: Regenerates the ACS and SAS connection strings for the Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: { customHeaders?: [key:
        string]: string }): Promise<AccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: parameters
          type: <xref uid="azure-arm-eventhub.RegenerateAccessKeyParameters" />
          description: |
            Parameters supplied to regenerate the
            AuthorizationRule Keys (PrimaryKey/SecondaryKey).
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessKeys} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessKeys} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-eventhub.AccessKeys> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
  - name: >-
      regenerateKeys(string, string, string, string,
      RegenerateAccessKeyParameters, { customHeaders?: [key: string]: string },
      ServiceCallback<AccessKeys>)
    uid: azure-arm-eventhub.EventHubs.regenerateKeys_2
    package: azure-arm-eventhub
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, namespaceName:
        string, eventHubName: string, authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options: { customHeaders?: [key: string]:
        string }, callback: ServiceCallback<AccessKeys>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: namespaceName
          type: string
          description: ''
        - id: eventHubName
          type: string
          description: ''
        - id: authorizationRuleName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-eventhub.RegenerateAccessKeyParameters" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-arm-eventhub.AccessKeys" />&gt;
          description: ''
  - name: >-
      regenerateKeysWithHttpOperationResponse(string, string, string, string,
      RegenerateAccessKeyParameters, { customHeaders?: [key: string]: string })
    uid: azure-arm-eventhub.EventHubs.regenerateKeysWithHttpOperationResponse
    package: azure-arm-eventhub
    summary: Regenerates the ACS and SAS connection strings for the Event Hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeysWithHttpOperationResponse(resourceGroupName:
        string, namespaceName: string, eventHubName: string,
        authorizationRuleName: string, parameters:
        RegenerateAccessKeyParameters, options?: { customHeaders?: [key:
        string]: string }): Promise<HttpOperationResponse<AccessKeys>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            Name of the resource group within the
            azure subscription.
        - id: namespaceName
          type: string
          description: |
            The Namespace name
        - id: eventHubName
          type: string
          description: |
            The Event Hub name
        - id: authorizationRuleName
          type: string
          description: |
            The authorization rule name.
        - id: parameters
          type: <xref uid="azure-arm-eventhub.RegenerateAccessKeyParameters" />
          description: |
            Parameters supplied to regenerate the
            AuthorizationRule Keys (PrimaryKey/SecondaryKey).
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-eventhub.AccessKeys" />&gt;&gt;
