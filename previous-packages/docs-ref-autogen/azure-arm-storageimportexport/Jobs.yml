### YamlMime:TSType
name: Jobs
uid: azure-arm-storageimportexport.Jobs
package: azure-arm-storageimportexport
summary: ''
fullName: Jobs
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'createOrUpdate(string, string, Job, ServiceCallback<Job>)'
    uid: azure-arm-storageimportexport.Jobs.createOrUpdate_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, jobName: string,
        jobProperties: Job, callback: ServiceCallback<Job>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.Job" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-storageimportexport.Job"
            />&gt;
          description: ''
  - name: >-
      createOrUpdate(string, string, Job, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-storageimportexport.Jobs.createOrUpdate
    package: azure-arm-storageimportexport
    summary: >-
      Creates a new import/export job or updates an existing import/export job
      in

      the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, jobName: string,
        jobProperties: Job, options?: { customHeaders?: [key: string]: string
        }): Promise<Job>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.Job" />
          description: |
            Properties of the import/export job that need
            to be specified during creation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Job} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Job} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.Job> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-storageimportexport.Job" />&gt;
  - name: >-
      createOrUpdate(string, string, Job, { customHeaders?: [key: string]:
      string }, ServiceCallback<Job>)
    uid: azure-arm-storageimportexport.Jobs.createOrUpdate_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, jobName: string,
        jobProperties: Job, options: { customHeaders?: [key: string]: string },
        callback: ServiceCallback<Job>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.Job" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-storageimportexport.Job"
            />&gt;
          description: ''
  - name: >-
      createOrUpdateWithHttpOperationResponse(string, string, Job, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-storageimportexport.Jobs.createOrUpdateWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: >-
      Creates a new import/export job or updates an existing import/export job
      in

      the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, jobName: string, jobProperties: Job, options?: { customHeaders?:
        [key: string]: string }): Promise<HttpOperationResponse<Job>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.Job" />
          description: |
            Properties of the import/export job that need
            to be specified during creation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.Job" />&gt;&gt;
  - name: 'deleteMethod(string, string, ServiceCallback<void>)'
    uid: azure-arm-storageimportexport.Jobs.deleteMethod_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, jobName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: 'deleteMethod(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-storageimportexport.Jobs.deleteMethod
    package: azure-arm-storageimportexport
    summary: |-
      Deletes an existing import/export job. Only import/export jobs in the
      Creating or Completed states can be deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, jobName: string,
        options?: { customHeaders?: [key: string]: string }): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      deleteMethod(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<void>)
    uid: azure-arm-storageimportexport.Jobs.deleteMethod_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, jobName: string,
        options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      deleteMethodWithHttpOperationResponse(string, string, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-storageimportexport.Jobs.deleteMethodWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: |-
      Deletes an existing import/export job. Only import/export jobs in the
      Creating or Completed states can be deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, jobName: string, options?: { customHeaders?: [key: string]:
        string }): Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'get(string, string, ServiceCallback<Job>)'
    uid: azure-arm-storageimportexport.Jobs.get_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, jobName: string, callback:
        ServiceCallback<Job>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-storageimportexport.Job"
            />&gt;
          description: ''
  - name: 'get(string, string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-storageimportexport.Jobs.get
    package: azure-arm-storageimportexport
    summary: Gets information about an existing import/export job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, jobName: string, options?: {
        customHeaders?: [key: string]: string }): Promise<Job>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Job} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Job} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.Job> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-storageimportexport.Job" />&gt;
  - name: >-
      get(string, string, { customHeaders?: [key: string]: string },
      ServiceCallback<Job>)
    uid: azure-arm-storageimportexport.Jobs.get_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, jobName: string, options: {
        customHeaders?: [key: string]: string }, callback: ServiceCallback<Job>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-storageimportexport.Job"
            />&gt;
          description: ''
  - name: >-
      getWithHttpOperationResponse(string, string, { customHeaders?: [key:
      string]: string })
    uid: azure-arm-storageimportexport.Jobs.getWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: Gets information about an existing import/export job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        jobName: string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<Job>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.Job" />&gt;&gt;
  - name: list(ServiceCallback<JobListResult>)
    uid: azure-arm-storageimportexport.Jobs.list_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<JobListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: >-
      list({ customHeaders?: [key: string]: string, filter?: string, top?:
      number })
    uid: azure-arm-storageimportexport.Jobs.list
    package: azure-arm-storageimportexport
    summary: Gets all the active and completed import/export jobs in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: { customHeaders?: [key: string]: string,
        filter?: string, top?: number }): Promise<JobListResult>
      parameters:
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, filter?: string, top?:
            number }
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {JobListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {JobListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.JobListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-storageimportexport.JobListResult"
          />&gt;
  - name: >-
      list({ customHeaders?: [key: string]: string, filter?: string, top?:
      number }, ServiceCallback<JobListResult>)
    uid: azure-arm-storageimportexport.Jobs.list_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: { customHeaders?: [key: string]: string, filter?:
        string, top?: number }, callback: ServiceCallback<JobListResult>)
      parameters:
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, filter?: string, top?:
            number }
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: >-
      listBitLockerKeys(string, string,
      ServiceCallback<BitLockerKeysListResult>)
    uid: azure-arm-storageimportexport.Jobs.listBitLockerKeys_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBitLockerKeys(resourceGroupName: string, jobName: string,
        callback: ServiceCallback<BitLockerKeysListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.BitLockerKeysListResult" />&gt;
          description: ''
  - name: >-
      listBitLockerKeys(string, string, { customHeaders?: [key: string]: string
      })
    uid: azure-arm-storageimportexport.Jobs.listBitLockerKeys
    package: azure-arm-storageimportexport
    summary: >-
      Lists the BitLocker keys for all drives in the specified import/export
      job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBitLockerKeys(resourceGroupName: string, jobName: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<BitLockerKeysListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {BitLockerKeysListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {BitLockerKeysListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.BitLockerKeysListResult> for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref
          uid="azure-arm-storageimportexport.BitLockerKeysListResult" />&gt;
  - name: >-
      listBitLockerKeys(string, string, { customHeaders?: [key: string]: string
      }, ServiceCallback<BitLockerKeysListResult>)
    uid: azure-arm-storageimportexport.Jobs.listBitLockerKeys_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBitLockerKeys(resourceGroupName: string, jobName: string,
        options: { customHeaders?: [key: string]: string }, callback:
        ServiceCallback<BitLockerKeysListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.BitLockerKeysListResult" />&gt;
          description: ''
  - name: >-
      listBitLockerKeysWithHttpOperationResponse(string, string, {
      customHeaders?: [key: string]: string })
    uid: >-
      azure-arm-storageimportexport.Jobs.listBitLockerKeysWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: >-
      Lists the BitLocker keys for all drives in the specified import/export
      job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBitLockerKeysWithHttpOperationResponse(resourceGroupName:
        string, jobName: string, options?: { customHeaders?: [key: string]:
        string }): Promise<HttpOperationResponse<BitLockerKeysListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.BitLockerKeysListResult" />&gt;&gt;
  - name: 'listByResourceGroup(string, ServiceCallback<JobListResult>)'
    uid: azure-arm-storageimportexport.Jobs.listByResourceGroup_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<JobListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: >-
      listByResourceGroup(string, { customHeaders?: [key: string]: string,
      filter?: string, top?: number })
    uid: azure-arm-storageimportexport.Jobs.listByResourceGroup
    package: azure-arm-storageimportexport
    summary: Returns all active and completed import/export jobs in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?: {
        customHeaders?: [key: string]: string, filter?: string, top?: number }):
        Promise<JobListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, filter?: string, top?:
            number }
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {JobListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {JobListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.JobListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-storageimportexport.JobListResult"
          />&gt;
  - name: >-
      listByResourceGroup(string, { customHeaders?: [key: string]: string,
      filter?: string, top?: number }, ServiceCallback<JobListResult>)
    uid: azure-arm-storageimportexport.Jobs.listByResourceGroup_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: {
        customHeaders?: [key: string]: string, filter?: string, top?: number },
        callback: ServiceCallback<JobListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, filter?: string, top?:
            number }
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: 'listByResourceGroupNext(string, ServiceCallback<JobListResult>)'
    uid: azure-arm-storageimportexport.Jobs.listByResourceGroupNext_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<JobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: 'listByResourceGroupNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-storageimportexport.Jobs.listByResourceGroupNext
    package: azure-arm-storageimportexport
    summary: Returns all active and completed import/export jobs in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?: {
        customHeaders?: [key: string]: string }): Promise<JobListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {JobListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {JobListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.JobListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-storageimportexport.JobListResult"
          />&gt;
  - name: >-
      listByResourceGroupNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<JobListResult>)
    uid: azure-arm-storageimportexport.Jobs.listByResourceGroupNext_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: {
        customHeaders?: [key: string]: string }, callback:
        ServiceCallback<JobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: >-
      listByResourceGroupNextWithHttpOperationResponse(string, { customHeaders?:
      [key: string]: string })
    uid: >-
      azure-arm-storageimportexport.Jobs.listByResourceGroupNextWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: Returns all active and completed import/export jobs in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<JobListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.JobListResult" />&gt;&gt;
  - name: >-
      listByResourceGroupWithHttpOperationResponse(string, { customHeaders?:
      [key: string]: string, filter?: string, top?: number })
    uid: >-
      azure-arm-storageimportexport.Jobs.listByResourceGroupWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: Returns all active and completed import/export jobs in a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: { customHeaders?: [key: string]: string, filter?:
        string, top?: number }): Promise<HttpOperationResponse<JobListResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, filter?: string, top?:
            number }
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.JobListResult" />&gt;&gt;
  - name: 'listNext(string, ServiceCallback<JobListResult>)'
    uid: azure-arm-storageimportexport.Jobs.listNext_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<JobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: 'listNext(string, { customHeaders?: [key: string]: string })'
    uid: azure-arm-storageimportexport.Jobs.listNext
    package: azure-arm-storageimportexport
    summary: Gets all the active and completed import/export jobs in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?: { customHeaders?:
        [key: string]: string }): Promise<JobListResult>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {JobListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {JobListResult} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.JobListResult> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: >-
          Promise&lt;<xref uid="azure-arm-storageimportexport.JobListResult"
          />&gt;
  - name: >-
      listNext(string, { customHeaders?: [key: string]: string },
      ServiceCallback<JobListResult>)
    uid: azure-arm-storageimportexport.Jobs.listNext_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: { customHeaders?: [key:
        string]: string }, callback: ServiceCallback<JobListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-storageimportexport.JobListResult" />&gt;
          description: ''
  - name: >-
      listNextWithHttpOperationResponse(string, { customHeaders?: [key: string]:
      string })
    uid: azure-arm-storageimportexport.Jobs.listNextWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: Gets all the active and completed import/export jobs in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: { customHeaders?: [key: string]: string }):
        Promise<HttpOperationResponse<JobListResult>>
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.JobListResult" />&gt;&gt;
  - name: >-
      listWithHttpOperationResponse({ customHeaders?: [key: string]: string,
      filter?: string, top?: number })
    uid: azure-arm-storageimportexport.Jobs.listWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: Gets all the active and completed import/export jobs in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listWithHttpOperationResponse(options?: { customHeaders?: [key:
        string]: string, filter?: string, top?: number }):
        Promise<HttpOperationResponse<JobListResult>>
      parameters:
        - id: options
          type: >-
            { customHeaders?: [key: string]: string, filter?: string, top?:
            number }
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.JobListResult" />&gt;&gt;
  - name: 'move(string, MoveJobParameters, ServiceCallback<void>)'
    uid: azure-arm-storageimportexport.Jobs.move_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function move(resourceGroupName: string, moveJobsParameters:
        MoveJobParameters, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: moveJobsParameters
          type: <xref uid="azure-arm-storageimportexport.MoveJobParameters" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: 'move(string, MoveJobParameters, { customHeaders?: [key: string]: string })'
    uid: azure-arm-storageimportexport.Jobs.move
    package: azure-arm-storageimportexport
    summary: |-
      Moves the specified import/export jobs from the resource group to a target
      resource group. The target resource group may be in a different
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function move(resourceGroupName: string, moveJobsParameters:
        MoveJobParameters, options?: { customHeaders?: [key: string]: string }):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: moveJobsParameters
          type: <xref uid="azure-arm-storageimportexport.MoveJobParameters" />
          description: |
            Parameters to be provided to move a job
            from one resource group to another.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;void&gt;
  - name: >-
      move(string, MoveJobParameters, { customHeaders?: [key: string]: string },
      ServiceCallback<void>)
    uid: azure-arm-storageimportexport.Jobs.move_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function move(resourceGroupName: string, moveJobsParameters:
        MoveJobParameters, options: { customHeaders?: [key: string]: string },
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: moveJobsParameters
          type: <xref uid="azure-arm-storageimportexport.MoveJobParameters" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      moveWithHttpOperationResponse(string, MoveJobParameters, { customHeaders?:
      [key: string]: string })
    uid: azure-arm-storageimportexport.Jobs.moveWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: |-
      Moves the specified import/export jobs from the resource group to a target
      resource group. The target resource group may be in a different
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function moveWithHttpOperationResponse(resourceGroupName: string,
        moveJobsParameters: MoveJobParameters, options?: { customHeaders?: [key:
        string]: string }): Promise<HttpOperationResponse<void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: moveJobsParameters
          type: <xref uid="azure-arm-storageimportexport.MoveJobParameters" />
          description: |
            Parameters to be provided to move a job
            from one resource group to another.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
  - name: 'update(string, string, MutableJob, ServiceCallback<Job>)'
    uid: azure-arm-storageimportexport.Jobs.update_1
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, jobName: string,
        jobProperties: MutableJob, callback: ServiceCallback<Job>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.MutableJob" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-storageimportexport.Job"
            />&gt;
          description: ''
  - name: >-
      update(string, string, MutableJob, { customHeaders?: [key: string]: string
      })
    uid: azure-arm-storageimportexport.Jobs.update
    package: azure-arm-storageimportexport
    summary: >-
      Updates specific properties of the import/export job. You can call this

      operation to notify the Import/Export service that the hard drives

      comprising the import or export job have been shipped to the Microsoft
      data

      center. It can also be used to cancel an existing job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, jobName: string,
        jobProperties: MutableJob, options?: { customHeaders?: [key: string]:
        string }): Promise<Job>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.MutableJob" />
          description: |
            Import/export job properties that need to be
            updated.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Job} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Job} [result]   - The deserialized result object if an error did not occur.
                               See <xref:azure-arm-storageimportexport.Job> for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
        type: Promise&lt;<xref uid="azure-arm-storageimportexport.Job" />&gt;
  - name: >-
      update(string, string, MutableJob, { customHeaders?: [key: string]: string
      }, ServiceCallback<Job>)
    uid: azure-arm-storageimportexport.Jobs.update_2
    package: azure-arm-storageimportexport
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, jobName: string,
        jobProperties: MutableJob, options: { customHeaders?: [key: string]:
        string }, callback: ServiceCallback<Job>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: jobName
          type: string
          description: ''
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.MutableJob" />
          description: ''
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-storageimportexport.Job"
            />&gt;
          description: ''
  - name: >-
      updateWithHttpOperationResponse(string, string, MutableJob, {
      customHeaders?: [key: string]: string })
    uid: azure-arm-storageimportexport.Jobs.updateWithHttpOperationResponse
    package: azure-arm-storageimportexport
    summary: >-
      Updates specific properties of the import/export job. You can call this

      operation to notify the Import/Export service that the hard drives

      comprising the import or export job have been shipped to the Microsoft
      data

      center. It can also be used to cancel an existing job.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        jobName: string, jobProperties: MutableJob, options?: { customHeaders?:
        [key: string]: string }): Promise<HttpOperationResponse<Job>>
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The resource group name uniquely
            identifies the resource group within the user subscription.
        - id: jobName
          type: string
          description: |
            The name of the import/export job.
        - id: jobProperties
          type: <xref uid="azure-arm-storageimportexport.MutableJob" />
          description: |
            Import/export job properties that need to be
            updated.
        - id: options
          type: '{ customHeaders?: [key: string]: string }'
          description: ''
      return:
        description: A promise is returned
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-storageimportexport.Job" />&gt;&gt;
