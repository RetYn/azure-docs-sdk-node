### YamlMime:TSPackage
uid: azure-storage.azurestorage
name: azurestorage
summary: ''
type: module
interfaces:
  - azure-storage.azurestorage.AccessConditions
  - azure-storage.azurestorage.ErrorOrResponse
  - azure-storage.azurestorage.ErrorOrResult
  - azure-storage.azurestorage.ServiceResponse
  - azure-storage.azurestorage.ServiceResult
  - azure-storage.azurestorage.StorageError
  - azure-storage.azurestorage.StorageHost
package: azure-storage
functions:
  - name: createBlobService()
    uid: azure-storage.azurestorage.createBlobService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createBlobService(): BlobService'
      return:
        description: ''
        type: >-
          <xref
          uid="azure-storage.azurestorage.services.blob.blobservice.BlobService"
          />
  - name: createBlobService(string)
    uid: azure-storage.azurestorage.createBlobService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createBlobService(connectionString: string): BlobService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: >-
          <xref
          uid="azure-storage.azurestorage.services.blob.blobservice.BlobService"
          />
  - name: 'createBlobService(string, string, string | StorageHost)'
    uid: azure-storage.azurestorage.createBlobService
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createBlobService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createBlobService(storageAccount: string, storageAccessKey:
        string, host?: string | StorageHost): BlobService
      parameters:
        - id: storageAccount
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: ''
      return:
        description: A new BlobService object.
        type: >-
          <xref
          uid="azure-storage.azurestorage.services.blob.blobservice.BlobService"
          />
  - name: createBlobServiceAnonymous(string | StorageHost)
    uid: azure-storage.azurestorage.createBlobServiceAnonymous
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createBlobService> object
      using the host uri and anonymous access.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createBlobServiceAnonymous(host?: string | StorageHost):
        BlobService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
      return:
        description: A new BlobService object with the anonymous credentials.
        type: >-
          <xref
          uid="azure-storage.azurestorage.services.blob.blobservice.BlobService"
          />
  - name: 'createBlobServiceWithSas(string | StorageHost, string)'
    uid: azure-storage.azurestorage.createBlobServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createBlobService> object
      using the host Uri and the SAS credentials provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createBlobServiceWithSas(host: string | StorageHost, sasToken:
        string): BlobService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new BlobService object with the SAS credentials.
        type: >-
          <xref
          uid="azure-storage.azurestorage.services.blob.blobservice.BlobService"
          />
  - name: >-
      createBlobServiceWithTokenCredential(string | StorageHost,
      TokenCredential)
    uid: azure-storage.azurestorage.createBlobServiceWithTokenCredential
    package: azure-storage
    summary: >+
      Creates a new <xref:azure-storage.azurestorage.createBlobService> object
      using the host Uri and the
      <xref:azure-storage.azurestorage.createBlobServiceWithTokenCredential>
      provided, which supports OAuth.


      **Example**


      var azure = require('azure-storage');

      var tokenCredential = new azure.TokenCredential('myOAuthAccessToken');

      var blobService =
      azure.createBlobServiceWithTokenCredential('https://account.blob.core.windows.net',
      tokenCredential);

      tokenCredential.set('updatedOAuthAccessToken');

    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createBlobServiceWithTokenCredential(host: string |
        StorageHost, token: TokenCredential): BlobService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: token
          type: >-
            <xref
            uid="azure-storage.azurestorage.common.models.tokenCredential.TokenCredential"
            />
          description: The TokenCredential object.
      return:
        description: >-
          A new BlobService object with the
          <xref:azure-storage.azurestorage.createBlobServiceWithTokenCredential>
          credentials.
        type: >-
          <xref
          uid="azure-storage.azurestorage.services.blob.blobservice.BlobService"
          />
  - name: createFileService()
    uid: azure-storage.azurestorage.createFileService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createFileService(): FileService'
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.file.FileService" />
  - name: createFileService(string)
    uid: azure-storage.azurestorage.createFileService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createFileService(connectionString: string): FileService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.file.FileService" />
  - name: 'createFileService(string, string, string | StorageHost)'
    uid: azure-storage.azurestorage.createFileService
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFileService(storageAccount: string, storageAccessKey:
        string, host?: string | StorageHost): FileService
      parameters:
        - id: storageAccount
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: ''
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.file.FileService" />
  - name: 'createFileServiceWithSas(string | StorageHost, string)'
    uid: azure-storage.azurestorage.createFileServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createFileService> object
      using the host Uri and the SAS credentials provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFileServiceWithSas(hostUri: string | StorageHost,
        sasToken: string): FileService
      parameters:
        - id: hostUri
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: ''
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new FileService object with the SAS credentials.
        type: <xref uid="azure-storage.azurestorage.services.file.FileService" />
  - name: createQueueService()
    uid: azure-storage.azurestorage.createQueueService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createQueueService(): QueueService'
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.queue.QueueService" />
  - name: createQueueService(string)
    uid: azure-storage.azurestorage.createQueueService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createQueueService(connectionString: string): QueueService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.queue.QueueService" />
  - name: 'createQueueService(string, string, string | StorageHost)'
    uid: azure-storage.azurestorage.createQueueService
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createQueueService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createQueueService(storageAccount: string, storageAccessKey:
        string, host?: string | StorageHost): QueueService
      parameters:
        - id: storageAccount
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: ''
      return:
        description: A new QueueService object.
        type: <xref uid="azure-storage.azurestorage.services.queue.QueueService" />
  - name: 'createQueueServiceWithSas(string | StorageHost, string)'
    uid: azure-storage.azurestorage.createQueueServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createQueueService> object
      using the host Uri and the SAS credentials provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createQueueServiceWithSas(host: string | StorageHost, sasToken:
        string): QueueService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new QueueService object with the SAS credentials.
        type: <xref uid="azure-storage.azurestorage.services.queue.QueueService" />
  - name: >-
      createQueueServiceWithTokenCredential(string | StorageHost,
      TokenCredential)
    uid: azure-storage.azurestorage.createQueueServiceWithTokenCredential
    package: azure-storage
    summary: >+
      Creates a new <xref:azure-storage.azurestorage.createQueueService> object
      using the host Uri and the
      <xref:azure-storage.azurestorage.createBlobServiceWithTokenCredential>
      provided, which supports OAuth.


      **Example**


      var azure = require('azure-storage');

      var tokenCredential = new azure.TokenCredential('myOAuthAccessToken');

      var queueService =
      azure.createQueueServiceWithTokenCredential('https://account.queue.core.windows.net',
      tokenCredential);

      tokenCredential.set('updatedOAuthAccessToken');

    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createQueueServiceWithTokenCredential(host: string |
        StorageHost, token: TokenCredential): QueueService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: token
          type: >-
            <xref
            uid="azure-storage.azurestorage.common.models.tokenCredential.TokenCredential"
            />
          description: The TokenCredential object.
      return:
        description: >-
          A new QueueService object with the
          <xref:azure-storage.azurestorage.createBlobServiceWithTokenCredential>
          object.
        type: <xref uid="azure-storage.azurestorage.services.queue.QueueService" />
  - name: createTableService()
    uid: azure-storage.azurestorage.createTableService
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createTableService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createTableService(): TableService'
      return:
        description: A new TableService object.
        type: <xref uid="azure-storage.azurestorage.services.table.TableService" />
  - name: createTableService(string)
    uid: azure-storage.azurestorage.createTableService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createTableService(connectionString: string): TableService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.table.TableService" />
  - name: 'createTableService(string, string, StorageHost)'
    uid: azure-storage.azurestorage.createTableService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTableService(storageAccountOrConnectionString: string,
        storageAccessKey: string, host?: StorageHost): TableService
      parameters:
        - id: storageAccountOrConnectionString
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: host
          type: <xref uid="azure-storage.azurestorage.StorageHost" />
          description: ''
      return:
        description: ''
        type: <xref uid="azure-storage.azurestorage.services.table.TableService" />
  - name: 'createTableServiceWithSas(string | StorageHost, string)'
    uid: azure-storage.azurestorage.createTableServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new <xref:azure-storage.azurestorage.createTableService> object
      using the host Uri and the SAS credentials provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTableServiceWithSas(hostUri: string | StorageHost,
        sasToken: string): TableService
      parameters:
        - id: hostUri
          type: string | <xref uid="azure-storage.azurestorage.StorageHost" />
          description: ''
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new TableService object with the SAS credentials.
        type: <xref uid="azure-storage.azurestorage.services.table.TableService" />
  - name: 'generateAccountSharedAccessSignature(string, string, SharedAccessPolicy)'
    uid: azure-storage.azurestorage.generateAccountSharedAccessSignature
    package: azure-storage
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        generateAccountSharedAccessSignature(storageAccountOrConnectionString:
        string, storageAccessKey: string, sharedAccessAccountPolicy:
        SharedAccessPolicy): string
      parameters:
        - id: storageAccountOrConnectionString
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: sharedAccessAccountPolicy
          type: <xref uid="azure-storage.azurestorage.common.SharedAccessPolicy" />
          description: ''
      return:
        description: ''
        type: string
  - name: generateDevelopmentStorageCredentials(string)
    uid: azure-storage.azurestorage.generateDevelopmentStorageCredentials
    package: azure-storage
    summary: >+
      Creates a connection string that can be used to create a service which
      runs on the storage emulator. The emulator must be downloaded separately.


      **Example**


      var azure = require('azure-storage');

      var devStoreCreds = azure.generateDevelopmentStorageCredentials();

      var blobService = azure.createBlobService(devStoreCreds);

    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateDevelopmentStorageCredentials(proxyUri?: string):
        string
      parameters:
        - id: proxyUri
          type: string
          description: ''
      return:
        description: A connection string representing the development storage credentials.
        type: string
